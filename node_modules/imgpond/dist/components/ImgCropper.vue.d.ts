export default _sfc_main;
declare namespace _sfc_main {
    namespace components {
        export { VueCropper };
        export { FormDialog as KiFormDialog };
    }
    namespace props {
        namespace show {
            const type: BooleanConstructor;
            const required: boolean;
        }
        const file: {
            new (fileBits: BlobPart[], fileName: string, options?: FilePropertyBag | undefined): File;
            prototype: File;
        };
        const aspectRatio: (ArrayConstructor | StringConstructor)[];
        const aspectRatioDeviation: NumberConstructor;
    }
    function data(): {
        loading: boolean;
        aspectRatioMismatched: boolean;
        submitting: boolean;
        src: string;
        sizeText: string;
        isLargeResolution: boolean;
        canvas: {};
        cropBox: {};
        containerStyle: {
            height: string;
        };
        rotateDegree: number;
        maxResolution: number;
        quality: number;
        isTouched: boolean;
    };
    function data(): {
        loading: boolean;
        aspectRatioMismatched: boolean;
        submitting: boolean;
        src: string;
        sizeText: string;
        isLargeResolution: boolean;
        canvas: {};
        cropBox: {};
        containerStyle: {
            height: string;
        };
        rotateDegree: number;
        maxResolution: number;
        quality: number;
        isTouched: boolean;
    };
    namespace computed {
        function debounce(): any;
        function debounce(): any;
        function MaxResolution(): any;
        function MaxResolution(): any;
        function aspectRatioText(): any;
        function aspectRatioText(): any;
        function mustCrop(): any;
        function mustCrop(): any;
        function aspectRatioValue(): any;
        function aspectRatioValue(): any;
    }
    namespace watch {
        function file(n: any, o: any): Promise<void>;
        function file(n: any, o: any): Promise<void>;
        function rotateDegree(n: any): void;
        function rotateDegree(n: any): void;
    }
    function mounted(): void;
    function mounted(): void;
    namespace methods {
        function onRotateDegreeChange(n: any): void;
        function onRotateDegreeChange(n: any): void;
        function getSizeDiffText(before: any, after: any): string;
        function getSizeDiffText(before: any, after: any): string;
        function checkAspectRatio(file: any): Promise<any>;
        function checkAspectRatio(file: any): Promise<any>;
        function onConfirm(): void;
        function onConfirm(): void;
        function onReady(): void;
        function onReady(): void;
        function flipX(): void;
        function flipX(): void;
        function flipY(): void;
        function flipY(): void;
        function getCropBoxData(): void;
        function getCropBoxData(): void;
        function getData(): void;
        function getData(): void;
        function move(offsetX: any, offsetY: any): void;
        function move(offsetX: any, offsetY: any): void;
        function reset(): void;
        function reset(): void;
        function rotate(deg: any): void;
        function rotate(deg: any): void;
        function setCropBoxData(): void;
        function setCropBoxData(): void;
        function setData(): void;
        function setData(): void;
        function setImage(e: any): void;
        function setImage(e: any): void;
        function showFileChooser(): void;
        function showFileChooser(): void;
        function zoom(percent: any): void;
        function zoom(percent: any): void;
    }
}
import { FormDialog } from "kikimore";
