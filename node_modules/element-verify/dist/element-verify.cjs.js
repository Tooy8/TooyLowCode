"use strict";var e=Object.defineProperty,t=Object.defineProperties,r=Object.getOwnPropertyDescriptors,n=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable,o=(t,r,n)=>r in t?e(t,r,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[r]=n,i=(e,t)=>{for(var r in t||(t={}))s.call(t,r)&&o(e,r,t[r]);if(n)for(var r of n(t))a.call(t,r)&&o(e,r,t[r]);return e};function l(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var c=l(require("element-ui"));const u=e=>/^-?\d*\.?\d+$/.test(e);var p=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",wphone:(e,{canBeEmpty:t})=>({trigger:"blur",validator:(e,r,n)=>t&&!r?n():11!==r.toString().length?n(new Error("手机号应该为11位数字")):u(r)?/^1[0-9]{10}$/.test(r)?n():n(new Error("请输入正确的手机号")):n(new Error("手机号应该为11位数字"))}),phone:(e,{canBeEmpty:t})=>({trigger:"blur",validator:(e,r,n)=>t&&!r?n():11!==r.toString().length?n(new Error("手机号应该为11位数字")):u(r)?/^1[3-9]\d{9}$/.test(r)?n():n(new Error("请输入正确的手机号")):n(new Error("手机号应该为11位数字"))}),sphone:(e,{canBeEmpty:t})=>({trigger:"blur",validator:(e,r,n)=>t&&!r?n():11!==r.toString().length?n(new Error("手机号应该为11位数字")):u(r)?/^1(3([0-35-9]\d|4[1-8])|4[14-9]\d|5([0-35689]\d|7[1-79])|66\d|7[2-35-8]\d|8\d{2}|9[13589]\d)\d{7}$/.test(r)?n():n(new Error("请输入正确的手机号")):n(new Error("手机号应该为11位数字"))}),telphone:(e,{canBeEmpty:t})=>({trigger:"blur",validator:(e,r,n)=>t&&!r?n():r.startsWith("0")?r.includes("-")?/^(?:(?:\d{3}-)?\d{8}|^(?:\d{4}-)?\d{7,8})(?:-\d+)?$/.test(r)?n():n(new Error("请输入正确的座机号码")):n(new Error("地区码与号码之间需要使用-符号连接")):n(new Error("国内座机号码是以数字0开头"))}),email:()=>({type:"email",trigger:"blur",message:"请输入正确的邮箱号"}),semail:(e,{canBeEmpty:t})=>({trigger:"blur",validator:(r,n,s)=>{if(t&&!n)return s();if(!Array.isArray(e))return void console.error("semail的参数应该是数组，该条校验失效被忽略");if(!/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(n))return s(new Error("请输入正确的邮箱号"));return e.some((e=>n.includes(e)))?s():s(new Error(`只允许输入${e}等域名的邮箱`))}}),url:()=>({type:"url",trigger:"blur",message:"请输入正确的url"}),surl:(e,{canBeEmpty:t})=>({trigger:"blur",validator:(r,n,s)=>t&&!n?s():/^(?:\w+:)?\/\/([^\s.]+\.\S{2}|localhost[:?\d]*)\S*$/.test(n)?n.startsWith(e)?s(new Error(`请输入以${e}开头的url`)):s():s(new Error("请输入正确的url"))}),idCard:(e,{canBeEmpty:t})=>({trigger:"blur",validator:(e,r,n)=>{const s=[7,9,10,5,8,4,2,1,6,3,7,9,10,5,8,4,2],a={0:"1",1:"0",2:"X",3:"9",4:"8",5:"7",6:"6",7:"5",8:"4",9:"3",10:"2"};if(t&&!r)return n();if(!/(^\d{8}(0\d|10|11|12)([0-2]\d|30|31)\d{3}$)|(^\d{6}(18|19|20)\d{2}(0[1-9]|10|11|12)([0-2]\d|30|31)\d{3}(\d|X|x)$)/.test(r))return n(new Error("请输入正确的身份证号"));if(18===r.length){let e=0,t=r.split("");t.forEach(((t,r)=>{17!==r&&(e+=parseInt(t)*s[r])}));let o=a[e%11];if(t[t.length-1].toUpperCase()!==o)return n(new Error("请输入正确的身份证号"))}return n()}}),passwordOptions:(e,{canBeEmpty:t})=>({trigger:"blur",validator:(r,n,s)=>{const a={"大写字母":"A-Z","小写字母":"a-z","字母":"A-Za-z","数字":"0-9","中文":"一-龥","特殊字符":"/./,/!/#/$/%/^/&/*/@/_/+/(/)/-/?",".":"/.",",":"/,","!":"/!","#":"/#",$:"/$","%":"/%","^":"/^","&":"/&","*":"/*","@":"/@",_:"/_","+":"/+","(":"/(",")":"/)","-":"/-","?":"/?"};if(t&&!n)return s();const[o,i,l,c]=e;if(o>n.toString().length||n.toString().length>i)return s(new Error(`密码长度应为${o}-${i}位`));if(!l||""===l)return void console.error("passwordOptions:可选类型参数是必填选项，该条校验规则失效已忽略");const u=l.split("|").map((e=>a[e])).join("");if(!new RegExp(`^[${u}]+$`).test(n))return s(new Error(`密码只能包含${l.replace(/\|/g,"、")}类型字符`));if(!c||""===c)return s();const p=c.split("|").map((e=>`([${a[e]}])+`)).join("");return new RegExp(`${p}`).test(n)?s():s(new Error(`密码必须包含${c.replace(/\|/g,"、")}类型字符`))}}),regexp:(e,{canBeEmpty:t})=>({trigger:"blur",validator:(r,n,s)=>{if(!Array.isArray(e))return void console.error('regexp校验的参数是含两个变量的数组 - ["正则字面量", "错误提示"]，此条校验无效被忽略');const[a,o]=e;if("[object RegExp]"===Object.prototype.toString.call(a))return t&&!n?s():a.test(n)?void s():s(new Error(o||"输入不符合要求"));console.error('regexp校验的参数是含两个变量的数组 - ["正则字面量", "错误提示"]，此条校验无效被忽略')}})});const d=e=>/^-?\d*\.?\d+$/.test(e);var g=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",eq:(e,{canBeEmpty:t})=>({trigger:"blur",validator:(r,n,s)=>"[object Number]"!==Object.prototype.toString.call(e)?(console.error(`eq校验的参数只能是number类型，当前类型： ${Object.prototype.toString.call(e)}`),s()):t&&!n?s():d(n)?parseFloat(n)!==parseFloat(e)?s(new Error(`输入内容应等于${e}`)):void s():s(new Error("请输入数字字符"))}),gt:(e,{canBeEmpty:t})=>({trigger:"blur",validator:(r,n,s)=>"[object Number]"!==Object.prototype.toString.call(e)?(console.error(`gt校验的参数只能是number类型，当前类型： ${Object.prototype.toString.call(e)}`),s()):t&&!n?s():d(n)?parseFloat(n)<=parseFloat(e)?s(new Error(`输入内容应大于${e}`)):void s():s(new Error("请输入数字字符"))}),gte:(e,{canBeEmpty:t})=>({trigger:"blur",validator:(r,n,s)=>"[object Number]"!==Object.prototype.toString.call(e)?(console.error(`gt校验的参数只能是number类型，当前类型： ${Object.prototype.toString.call(e)}`),s()):t&&!n?s():d(n)?parseFloat(n)<parseFloat(e)?s(new Error(`输入内容应大于等于${e}`)):void s():s(new Error("请输入数字字符"))}),lt:(e,{canBeEmpty:t})=>({trigger:"blur",validator:(r,n,s)=>"[object Number]"!==Object.prototype.toString.call(e)?(console.error(`gt校验的参数只能是number类型，当前类型： ${Object.prototype.toString.call(e)}`),s()):t&&!n?s():d(n)?parseFloat(n)>=parseFloat(e)?s(new Error(`输入内容应小于${e}`)):void s():s(new Error("请输入数字字符"))}),lte:(e,{canBeEmpty:t})=>({trigger:"blur",validator:(r,n,s)=>"[object Number]"!==Object.prototype.toString.call(e)?(console.error(`gt校验的参数只能是number类型，当前类型： ${Object.prototype.toString.call(e)}`),s()):t&&!n?s():d(n)?parseFloat(n)>parseFloat(e)?s(new Error(`输入内容应小于等于${e}`)):void s():s(new Error("请输入数字字符"))})});var m=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",length:e=>({type:"string",trigger:"blur",min:parseInt(e),max:parseInt(e),message:`输入内容应为${e}个字符`}),minLen:e=>({type:"string",trigger:"blur",min:parseInt(e),message:`输入内容应大于${e}个字符`}),maxLen:e=>({type:"string",trigger:"blur",max:parseInt(e),message:`输入内容应小于${e}个字符`})});const h={"数字":{message:"请输入整数或者小数!",check:e=>/^-?\d*\.?\d+$/.test(e)},"正数":{message:"请输入整数!",check:e=>/^-?[0-9]\d*$/.test(e)},intr0:{message:"请输入整数!",check:e=>/^-?[1-9]\d*$/.test(e)},"正整数":{message:"请输入正整数!",check:e=>/^[1-9]\d*$/.test(e)},pintw0:{message:"请输入0或正整数!",check:e=>/^[0-9]\d*$/.test(e)},"负整数":{message:"请输入负整数!",check:e=>/^-[1-9]\d*$/.test(e)},nintw0:{message:"请输入0或负整数!",check:e=>/^(0|-[0-9]\d*)$/.test(e)},"小数":{message:"请输入小数!",check:e=>/^-?([0-9]\d*)\.(\d+)$/.test(e)},floatw0:{message:"请输入小数!",check:e=>/^-?(0|([0-9]\d*\.\d+))$/.test(e)},"正小数":{message:"请输入小数!",check:e=>/^([0-9]\d*)\.(\d+)$/.test(e)},pfloatw0:{message:"请输入小数!",check:e=>/^(0|([0-9]\d*\.\d+))$/.test(e)},"负小数":{message:"请输入小数!",check:e=>/^-([0-9]\d*)\.(\d+)$/.test(e)},nfloatw0:{message:"请输入小数!",check:e=>/^(0|(-[0-9]\d*\.\d+))$/.test(e)},"字母":{message:"请输入英文字符!",check:e=>/^[a-zA-Z]+$/.test(e)},"小写字母":{message:"请输入小写英文字符!",check:e=>/^[a-z]+$/.test(e)},"大写字母":{message:"请输入大写英文字符!",check:e=>/^[A-Z]+$/.test(e)},"中文":{message:"请输入中文字符!",check:e=>/^[\u4e00-\u9fa5]+$/.test(e)},"特殊字符":{message:"请输入[.,!#$%^&*@_+-?]等特殊字符!",check:e=>/^[.,!#$%^&*@_+-/?]+$/.test(e)}};const v={"./modules/common.js":p,"./modules/number.js":g,"./modules/text.js":m,"./modules/type.js":Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",type:(e,{canBeEmpty:t})=>({trigger:"blur",validator:(r,n,s)=>{if(t&&!n)return s();const a=h[e];return a.check(n)?s():s(new Error(a.message))}}),typeOptions:(e,{canBeEmpty:t})=>({trigger:"blur",validator:(r,n,s)=>{const a={"大写字母":"A-Z","小写字母":"a-z","字母":"A-Za-z","数字":"0-9","中文":"一-龥","特殊字符":"/./,/!/#/$/%/^/&/*/@/_/+/(/)/-/?",".":"/.",",":"/,","!":"/!","#":"/#",$:"/$","%":"/%","^":"/^","&":"/&","*":"/*","@":"/@",_:"/_","+":"/+","(":"/(",")":"/)","-":"/-","?":"/?"};if(t&&!n)return s();const[o,i]=e;if(!o||""===o)return void console.error("typeOptions:可选类型参数是必填选项，该条校验规则失效已忽略");const l=o.split("|").map((e=>a[e])).join("");if(!new RegExp(`^[${l}]+$`).test(n))return s(new Error(`只允许输入${o.replace(/\|/g,"、")}类型字符`));if(!i||""===i)return s();const c=i.split("|").map((e=>`([${a[e]}])+`)).join("");return new RegExp(`${c}`).test(n)?s():s(new Error(`必须包含${i.replace(/\|/g,"、")}字符`))}})}),"./modules/verify.js":Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",verify:(e,{errorAlias:t})=>({required:!0,trigger:["blur","change"],message:t||"必填项"}),canBeEmpty:()=>({required:!1,trigger:"blur"})})};let b={};for(const R in v){const e=v[R];b=i(i({},b),e)}var E=b;const y=e=>""===e||!0===e||(e=>"[object Object]"===Object.prototype.toString.call(e))(e);class w{constructor(e){this.__initChain(e),this.__setProcess()}__initChain(e){this.onlyRequiredHandler=new $(e),this.canBeEmptyHandler=new j(e),this.complexHandler=new O(e)}__setProcess(){this.onlyRequiredHandler.setNextHandler(this.canBeEmptyHandler),this.canBeEmptyHandler.setNextHandler(this.complexHandler)}handle(e){this.onlyRequiredHandler.handle(e)}}class f{constructor(e){this.nextHandler=null,this.callObj=e}setNextHandler(e){this.nextHandler=e}}class $ extends f{constructor(e){super(e)}handle(e){""===e.verify||!0===e.verify?this.callObj.addRule("verify"):this.nextHandler&&this.nextHandler.handle(...arguments)}}class j extends f{constructor(e){super(e)}handle(e){y(e.canBeEmpty)?this.callObj.addRule("canBeEmpty"):this.callObj.addRule("verify"),this.nextHandler&&this.nextHandler.handle(...arguments)}}class O extends f{constructor(e){super(e)}handle(e){Object.getOwnPropertyNames(e.verify).map((t=>{this.callObj.addRule(t,e.verify[t],{canBeEmpty:y(e.canBeEmpty)})})),this.nextHandler&&this.nextHandler.handle(...arguments)}}class x{constructor(e){Object.keys(e.rules).map((t=>this[t]=e.rules[t]))}getRules(){return Object.values(this)}}class _{constructor(e,t){this.rules={},this.vueProps=e,this.globalOptions=t,this.rulesTemplate=this.__getRulesTemplate()}__getRulesTemplate(){const e=this.globalOptions.customRules;return e?"[object Object]"!==Object.prototype.toString.call(e)?(console.warn("form-verify全局自定义规则字段customRules只能是一个object, 自定义规则失效"),E):i(i({},E),e):E}addRule(e,n,s){if(!this.rulesTemplate[e])return console.log(`校验器中无此验证选项：${e}，请检查，该条校验被忽略!`),this;const a=(o=i({},s),l={errorAlias:this.globalOptions.errorAlias},t(o,r(l)));var o,l;return Object.prototype.hasOwnProperty.call(this.rulesTemplate,e)?this.rules[e]=this.rulesTemplate[e](n,a):console.log(`校验器中无此验证选项：${e}，请检查!`),this}build(){return new w(this).handle(this.vueProps),new x(this)}}const N={verify:{type:Boolean|Object,default:!1},canBeEmpty:{type:Boolean|String,default:void 0},watch:{type:String,default:void 0},trigger:{type:String,default:void 0}},S=e=>({props:i({},JSON.parse(JSON.stringify(N))),mounted(){this.watch&&this.elForm.$watch(`model.${this.watch}`,(()=>{this.elForm.validateField(this.prop)})),this.trigger&&this.elForm.$watch(`model.${this.prop}`,(()=>{this.elForm.validateField(this.trigger)}))},methods:{getRules(){return y(this.verify)?this.getMergeRules():this.getFrameWorkRules()},getMergeRules(){const t=new _(this._props,e).build().getRules()||[];return[...this.getFrameWorkRules(),...t]},getFrameWorkRules(){let e=this.form.rules;const t=this.rules,r=void 0!==this.required?{required:!!this.required}:[];return e=e?e[this.prop]:[],[].concat(t||e||[]).concat(r)}}});var B=function(e,t){const r=e.extend(c.default.FormItem);if(!r)throw Error("please install element first, https://element.eleme.cn/#/");r.mixin(S(t))},F=[{name:"regex",callback:{update:(e,t)=>{const r=t.value;if("[object RegExp]"!==Object.prototype.toString.call(r))return void console.warn(`v-regex指令参数只支持字面量正则，当前绑定参数：${t.value}，绑定无效`);const n=e.getElementsByTagName("input")[0];let s=!1;n.addEventListener("compositionstart",(function(){s=!0})),n.addEventListener("compositionend",(function(){s=!1,this.value=this.value.replace(r,"")})),n.addEventListener("input",(function(){s||(this.value=this.value.replace(r,""))})),n.addEventListener("blur",(function(){n.dispatchEvent(new Event("change")),n.dispatchEvent(new Event("input"))}))}}},{name:"length",callback:{update:(e,t)=>{const r=parseInt(t.value);if(isNaN(r))return void console.warn(`v-length指令参数只能是正整数，当前绑定参数：${t.value}，绑定无效`);const n=e.getElementsByTagName("input")[0];let s=!1;n.addEventListener("compositionstart",(function(){s=!0})),n.addEventListener("compositionend",(function(){s=!1,this.value.length>r&&(this.value=this.value.slice(0,r))})),n.oninput=function(){s||this.value.length<=r||(this.value=this.value.slice(0,r))},n.addEventListener("blur",(function(){n.dispatchEvent(new Event("change")),n.dispatchEvent(new Event("input"))}))}}},{name:"precision",callback:{bind:(e,t)=>{const r=parseInt(t.value);if(isNaN(r))return void console.warn(`v-precision指令参数只能是正整数，当前绑定参数：${t.value}，绑定无效`);const n=e.getElementsByTagName("input")[0];n.addEventListener("blur",(function(){const e=parseFloat(this.value.trim());isNaN(e)?console.warn(`v-precision指令只能检测数字类型string | number, 当前参数内容：${e}，请对输入内容进行限制`):(this.value=parseFloat(e.toFixed(r)),n.dispatchEvent(new Event("change")),n.dispatchEvent(new Event("input")))}))}}},{name:"max",callback:{bind:(e,t)=>{const r=parseInt(t.value);if(isNaN(r))return void console.warn(`v-max指令参数只能是正整数，当前绑定参数：${t.value}，绑定无效`);const n=e.getElementsByTagName("input")[0];n.addEventListener("blur",(function(){const e=parseFloat(this.value.trim());isNaN(e)?console.warn(`v-max指令只能检测数字类型string | number, 当前参数内容：${e}，请对输入内容进行限制`):e>r&&(this.value=r,n.dispatchEvent(new Event("change")),n.dispatchEvent(new Event("input")))}))}}},{name:"min",callback:{bind:(e,t)=>{const r=parseInt(t.value);if(isNaN(r))return void console.warn(`v-min指令参数只能是正整数，当前绑定参数：${t.value}，绑定无效`);const n=e.getElementsByTagName("input")[0];n.addEventListener("blur",(function(){const e=parseFloat(this.value.trim());isNaN(e)?console.warn(`v-min指令只能检测数字类型string | number, 当前参数内容：${e}，请对输入内容进行限制`):e<r&&(this.value=r,n.dispatchEvent(new Event("change")),n.dispatchEvent(new Event("input")))}))}}},{name:"number",callback:{bind:(e,t)=>{const{arg:r,value:n}=t,s=e.getElementsByTagName("input")[0];s.addEventListener("blur",(function(){const e={precision:(e,r)=>(r=parseFloat(r),isNaN(r)?(console.warn(`v-number:precision指令参数只能是正整数，当前绑定参数：${t.value}，绑定无效`),e):parseFloat(e.toFixed(r))),max:(e,r)=>(r=parseFloat(r),isNaN(r)?(console.warn(`v-number:max指令参数只能是正整数，当前绑定参数：${t.value}，绑定无效`),e):e>r?r:e),min:(e,r)=>(r=parseFloat(r),isNaN(r)?(console.warn(`v-number:min指令参数只能是正整数，当前绑定参数：${t.value}，绑定无效`),e):e<r?r:e)};let a=parseFloat(this.value.trim());if(""===a||isNaN(a))return console.warn(`v-number指令只能检测数字类型string | number, 当前内容：${this.value}`),this.value=null,s.dispatchEvent(new Event("change")),void s.dispatchEvent(new Event("input"));Object.prototype.hasOwnProperty.call(e,r)&&(a=e[r](a,n)),this.value=a,s.dispatchEvent(new Event("change")),s.dispatchEvent(new Event("input"))}))}}}];var k={install:function(e){F.map((t=>{e.directive(t.name,t.callback)}))}};module.exports=function(e,t){k.install(e,t),B(e,t||{})};
