export default _sfc_main;
declare namespace _sfc_main {
    const name: string;
    namespace props {
        namespace show {
            const type: BooleanConstructor;
            const required: boolean;
        }
        const value: {};
        const elFormProps: {};
        const retrieve: {};
        const submit: {};
        namespace readonly {
            const type_1: BooleanConstructor;
            export { type_1 as type };
            const _default: undefined;
            export { _default as default };
        }
        namespace loading {
            const type_2: BooleanConstructor;
            export { type_2 as type };
            const _default_1: undefined;
            export { _default_1 as default };
        }
        const title: {};
        const getContainer: {};
        namespace allowClose {
            const type_3: BooleanConstructor;
            export { type_3 as type };
            const _default_2: undefined;
            export { _default_2 as default };
        }
    }
    function data(): {
        retrieving: boolean;
        submitting: boolean;
        closing: boolean;
        initiated: boolean;
        styleTag: null;
        scrollbar: null;
        showConfirmButton: boolean;
        beforeCloseIsPassed: boolean;
        labelWidth: undefined;
        key: number;
    };
    function data(): {
        retrieving: boolean;
        submitting: boolean;
        closing: boolean;
        initiated: boolean;
        styleTag: null;
        scrollbar: null;
        showConfirmButton: boolean;
        beforeCloseIsPassed: boolean;
        labelWidth: undefined;
        key: number;
    };
    namespace computed {
        function ValueIsPlainObject(): any;
        function ValueIsPlainObject(): any;
        function AllowClose(): any;
        function AllowClose(): any;
        function Title(): any;
        function Title(): any;
        function Listeners(): any;
        function Listeners(): any;
        function Loading(): any;
        function Loading(): any;
        function Retrieve(): any;
        function Retrieve(): any;
        function Submit(): any;
        function Submit(): any;
        function Readonly(): any;
        function Readonly(): any;
        function ElDialogProps(): any;
        function ElDialogProps(): any;
        function ElFormProps(): any;
        function ElFormProps(): any;
        function GetContainer(): any;
        function GetContainer(): any;
    }
    namespace watch {
        export namespace show_1 {
            const immediate: boolean;
            function handler(n: any): void;
            function handler(n: any): void;
        }
        export { show_1 as show };
        export namespace Readonly {
            const immediate_1: boolean;
            export { immediate_1 as immediate };
            export function handler(n: any): void;
            export function handler(n: any): void;
        }
    }
    function created(): void;
    function created(): void;
    function updated(): void;
    function updated(): void;
    function unmounted(): void;
    function unmounted(): void;
    namespace methods {
        export function computeLabelWidth(): void;
        export function computeLabelWidth(): void;
        export function onClosed(): void;
        export function onClosed(): void;
        export function close(): void;
        export function close(): void;
        export function confirm(): void;
        export function confirm(): void;
        export { highlightError };
    }
}
import highlightError from "./highlightError";
