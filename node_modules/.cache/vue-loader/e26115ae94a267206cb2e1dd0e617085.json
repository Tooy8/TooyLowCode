{"remainingRequest":"D:\\开源项目\\商城低代码\\mall-cook\\packages\\mall-cook-platform\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\开源项目\\商城低代码\\mall-cook\\packages\\mall-cook-platform\\src\\components\\MiniMCE\\plugins\\InsertWord\\index.vue?vue&type=style&index=0&id=56a8967c&lang=scss&scoped=true&","dependencies":[{"path":"D:\\开源项目\\商城低代码\\mall-cook\\packages\\mall-cook-platform\\src\\components\\MiniMCE\\plugins\\InsertWord\\index.vue","mtime":1693619752153},{"path":"D:\\开源项目\\商城低代码\\mall-cook\\packages\\mall-cook-platform\\node_modules\\css-loader\\dist\\cjs.js","mtime":1693619861603},{"path":"D:\\开源项目\\商城低代码\\mall-cook\\packages\\mall-cook-platform\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1693619864566},{"path":"D:\\开源项目\\商城低代码\\mall-cook\\packages\\mall-cook-platform\\node_modules\\px2rem-loader\\index.js","mtime":1693619901908},{"path":"D:\\开源项目\\商城低代码\\mall-cook\\packages\\mall-cook-platform\\node_modules\\postcss-loader\\src\\index.js","mtime":1693619864324},{"path":"D:\\开源项目\\商城低代码\\mall-cook\\packages\\mall-cook-platform\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1693619903311},{"path":"D:\\开源项目\\商城低代码\\mall-cook\\packages\\mall-cook-platform\\node_modules\\sass-resources-loader\\lib\\loader.js","mtime":1693619810749},{"path":"D:\\开源项目\\商城低代码\\mall-cook\\packages\\mall-cook-platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1693619820390},{"path":"D:\\开源项目\\商城低代码\\mall-cook\\packages\\mall-cook-platform\\node_modules\\vue-loader\\lib\\index.js","mtime":1693619864566}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCjo6di1kZWVwIC5lbC1kaWFsb2cgew0KICBtaW4td2lkdGg6IDYwMHB4Ow0KDQogICYgPiAuZWwtZGlhbG9nX19ib2R5IHsNCiAgICBkaXNwbGF5OiBmbGV4Ow0KICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOw0KDQogICAgLmVsLXVwbG9hZCB7DQogICAgICB3aWR0aDogMTAwJTsNCg0KICAgICAgJiA+IC5lbC11cGxvYWQtZHJhZ2dlciB7DQogICAgICAgIHdpZHRoOiAxMDAlOw0KDQogICAgICAgIC5lbC11cGxvYWRfX3RleHQgew0KICAgICAgICAgIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7DQogICAgICAgIH0NCiAgICAgIH0NCiAgICB9DQoNCiAgICAuZWwtdXBsb2FkLWxpc3RfX2l0ZW0gew0KICAgICAgd2lkdGg6IGluaXRpYWwgIWltcG9ydGFudDsNCiAgICAgIGhlaWdodDogaW5pdGlhbCAhaW1wb3J0YW50Ow0KICAgIH0NCiAgfQ0KfQ0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2HA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/MiniMCE/plugins/InsertWord","sourcesContent":["<template>\r\n  <el-dialog\r\n    :visible=\"show\"\r\n    title=\"插入 Word 文档\"\r\n    append-to-body\r\n    destroy-on-close\r\n    :close-on-click-modal=\"false\"\r\n    @close=\"show=false\"\r\n  >\r\n    <el-upload\r\n      drag\r\n      action=\"\"\r\n      multiple\r\n      :auto-upload=\"false\"\r\n      :on-change=\"onChange\"\r\n      :on-remove=\"onRemove\"\r\n      style=\"width:100%;\"\r\n      ref=\"elUploadRef\"\r\n    >\r\n      <i class=\"el-icon-upload\"></i>\r\n      <div class=\"el-upload__text\">将 docx 文件拖到此处，或<em>点击上传</em></div>\r\n    </el-upload>\r\n\r\n    <template #footer>\r\n      <el-button @click=\"show=false\">取 消</el-button>\r\n      <el-button type=\"primary\" @click=\"onSubmit\" :loading=\"loading\" :disabled=\"!files.length\">确 定</el-button>\r\n    </template>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script>\r\nimport mammoth from 'mammoth/mammoth.browser.min.js'\r\n\r\nexport default {\r\n  props: {\r\n    editor: {\r\n      required: true,\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      show: false,\r\n      files: [],\r\n      loading: false,\r\n      allSettled: true,\r\n    }\r\n  },\r\n  watch: {\r\n    show (n) {\r\n      if (!n) {\r\n        this.$nextTick(() => {\r\n          this.files = []\r\n        })\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    open () {\r\n      this.show = true\r\n    },\r\n    onChange (file, fileList) {\r\n      this.files = Array.from(fileList, ({ raw }) => raw)\r\n    },\r\n    onRemove (file, fileList) {\r\n      this.files = Array.from(fileList, ({ raw }) => raw)\r\n    },\r\n    async onSubmit () {\r\n      this.loading = true\r\n      const results = await Promise.allSettled(this.files.map(v =>\r\n        new Promise((resolve, reject) => {\r\n          if (!v.name.endsWith('.docx')) {\r\n            reject('仅支持 docx 格式')\r\n          }\r\n\r\n          const reader = new FileReader()\r\n          reader.onload = async e => {\r\n            const arrayBuffer = e.target.result\r\n            if (arrayBuffer.byteLength) {\r\n              mammoth.convertToHtml({ arrayBuffer }).then(res => {\r\n                const { messages, value } = res\r\n                console.log(`${v.name} 解析结果：`, res)\r\n                if (value) {\r\n                  resolve(value)\r\n                } else {\r\n                  reject(`${v.name} 内容为空`)\r\n                }\r\n              }).catch(err => {\r\n                reject(err)\r\n              })\r\n            } else {\r\n              reject(`${v.name} 内容为空`)\r\n            }\r\n          }\r\n          reader.readAsArrayBuffer(v)\r\n        })\r\n      ))\r\n\r\n      results.map(result => {\r\n        const { status, value, reason } = result\r\n        if (status === 'fulfilled') {\r\n          this.editor.insertContent(value)\r\n        } else {\r\n          if (reason) {\r\n            console.error(reason)\r\n            this.$message.error(typeof reason === 'string' ? reason : '解析失败')\r\n          }\r\n          this.allSettled = false\r\n        }\r\n      })\r\n\r\n      this.files = []\r\n      this.$refs.elUploadRef.clearFiles()\r\n      this.loading = false\r\n      if (this.allSettled) {\r\n        this.show = false\r\n      }\r\n      this.allSettled = true\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n::v-deep .el-dialog {\r\n  min-width: 600px;\r\n\r\n  & > .el-dialog__body {\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n    .el-upload {\r\n      width: 100%;\r\n\r\n      & > .el-upload-dragger {\r\n        width: 100%;\r\n\r\n        .el-upload__text {\r\n          display: block !important;\r\n        }\r\n      }\r\n    }\r\n\r\n    .el-upload-list__item {\r\n      width: initial !important;\r\n      height: initial !important;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}