{"remainingRequest":"D:\\开源项目\\Tooy-LowCode\\lowCode\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\开源项目\\Tooy-LowCode\\lowCode\\src\\custom-schema-template\\components\\SchemaGoods\\index1.vue?vue&type=style&index=0&id=0fe0de74&lang=scss&scoped=true&","dependencies":[{"path":"D:\\开源项目\\Tooy-LowCode\\lowCode\\src\\custom-schema-template\\components\\SchemaGoods\\index1.vue","mtime":1693619752171},{"path":"D:\\开源项目\\Tooy-LowCode\\lowCode\\node_modules\\css-loader\\dist\\cjs.js","mtime":1693619861603},{"path":"D:\\开源项目\\Tooy-LowCode\\lowCode\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1693619864566},{"path":"D:\\开源项目\\Tooy-LowCode\\lowCode\\node_modules\\px2rem-loader\\index.js","mtime":1693619901908},{"path":"D:\\开源项目\\Tooy-LowCode\\lowCode\\node_modules\\postcss-loader\\src\\index.js","mtime":1693619864324},{"path":"D:\\开源项目\\Tooy-LowCode\\lowCode\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1693619903311},{"path":"D:\\开源项目\\Tooy-LowCode\\lowCode\\node_modules\\sass-resources-loader\\lib\\loader.js","mtime":1693619810749},{"path":"D:\\开源项目\\Tooy-LowCode\\lowCode\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1693619820390},{"path":"D:\\开源项目\\Tooy-LowCode\\lowCode\\node_modules\\vue-loader\\lib\\index.js","mtime":1693619864566}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KaW5wdXQgew0KICBvdXRsaW5lOiBub25lOw0KICBib3JkZXI6IDA7DQp9DQoNCi5hZGQtYnRuIHsNCiAgd2lkdGg6IDEwMCU7DQogIGhlaWdodDogNDBweDsNCiAgbGluZS1oZWlnaHQ6IDQwcHg7DQogIG1hcmdpbi10b3A6IDIwcHg7DQogIG1hcmdpbi1ib3R0b206IDEwcHg7DQogIGJvcmRlcjogc29saWQgMXB4ICRjb2xvci10aGVtZTsNCiAgdGV4dC1hbGlnbjogY2VudGVyOw0KICBmb250LXNpemU6IDE0cHg7DQogIGNvbG9yOiAkY29sb3ItdGhlbWU7DQogIGN1cnNvcjogcG9pbnRlcjsNCn0NCg=="},{"version":3,"sources":["index1.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index1.vue","sourceRoot":"src/custom-schema-template/components/SchemaGoods","sourcesContent":["<!--\r\n * @Description: What's this for\r\n * @Autor: WangYuan\r\n * @Date: 2021-06-24 09:46:16\r\n * @LastEditors: WangYuan\r\n * @LastEditTime: 2022-01-27 19:43:25\r\n-->\r\n<template>\r\n  <div>\r\n\r\n    <!-- 商品分组 -->\r\n    <ul class=\"nav\">\r\n      <li\r\n        class=\"nav-item\"\r\n        v-for=\"(group,index) in mValue\"\r\n        :key=\"index\"\r\n      >\r\n        <div\r\n          v-if=\"index != 0\"\r\n          class=\"nav-delete\"\r\n          @click=\"delType(index)\"\r\n        >\r\n          <i class=\"f12 icon icon-cha-\"></i>\r\n        </div>\r\n\r\n        <!-- 分组内容 -->\r\n        <config-item label='分组名称'>\r\n          <el-input\r\n            class=\"mt5 w200\"\r\n            v-model=\"group.label\"\r\n            placeholder=\"请输入分组名称\"\r\n            size='mini'\r\n          ></el-input>\r\n        </config-item>\r\n        <config-item label='分组标题'>\r\n          <el-input\r\n            class=\"mt5 w200\"\r\n            v-model=\"group.title\"\r\n            placeholder=\"请输入分组名称\"\r\n            size='mini'\r\n          ></el-input>\r\n        </config-item>\r\n\r\n        <!-- 商品列表 -->\r\n        <div class=\"flex\">\r\n          <GoodsConfigList\r\n            :group='group'\r\n            @add='editActiveList'\r\n          ></GoodsConfigList>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n\r\n    <!-- 新增分组 -->\r\n    <div\r\n      class=\"add-btn\"\r\n      @click=\"addType\"\r\n    >添加商品分组</div>\r\n\r\n    \r\n    <GoodsConfigChoose\r\n      v-if=\"show\"\r\n      :show.sync='show'\r\n      :activeList=\"aciveItem.list\"\r\n      @submit=\"replaceActiveList\"\r\n    >\r\n    </GoodsConfigChoose>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"SchemaGoods1\",\r\n  props: {\r\n    value: {\r\n      type: Array,\r\n      default: () => [],\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      show: false,\r\n      mValue: [],\r\n      aciveItem: {},\r\n    };\r\n  },\r\n  watch: {\r\n    value: {\r\n      immediate: true,\r\n      handler(newValue, oldValue) {\r\n        this.mValue = newValue;\r\n      },\r\n    },\r\n    mValue: {\r\n      immediate: true,\r\n      handler(newValue, oldValue) {\r\n        this.$emit(\"input\", newValue);\r\n      },\r\n    },\r\n  },\r\n  methods: {\r\n    // 新增分组\r\n    addType() {\r\n      this.mValue.push({\r\n        label: \"新增分组\",\r\n        title: \"上新商品\",\r\n        list: [],\r\n      });\r\n    },\r\n\r\n    // 删除分组\r\n    delType(index) {\r\n      this.mValue.splice(index, 1);\r\n    },\r\n\r\n    // 编辑商品列表\r\n    editActiveList(item) {\r\n      this.aciveItem = item;\r\n      this.show = true;\r\n    },\r\n\r\n    // 替换商品列表\r\n    replaceActiveList(list) {\r\n      this.aciveItem.list = list;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\ninput {\r\n  outline: none;\r\n  border: 0;\r\n}\r\n\r\n.add-btn {\r\n  width: 100%;\r\n  height: 40px;\r\n  line-height: 40px;\r\n  margin-top: 20px;\r\n  margin-bottom: 10px;\r\n  border: solid 1px $color-theme;\r\n  text-align: center;\r\n  font-size: 14px;\r\n  color: $color-theme;\r\n  cursor: pointer;\r\n}\r\n</style>"]}]}