{"remainingRequest":"D:\\开源项目\\低代码\\Tooy-LowCode\\lowCode\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\开源项目\\低代码\\Tooy-LowCode\\lowCode\\src\\custom-schema-template\\components\\SchemaCapCube\\CapCubeLayout.vue?vue&type=style&index=0&id=3a1ba74b&lang=scss&scoped=true&","dependencies":[{"path":"D:\\开源项目\\低代码\\Tooy-LowCode\\lowCode\\src\\custom-schema-template\\components\\SchemaCapCube\\CapCubeLayout.vue","mtime":1693619752169},{"path":"D:\\开源项目\\低代码\\Tooy-LowCode\\lowCode\\node_modules\\css-loader\\dist\\cjs.js","mtime":1693619861603},{"path":"D:\\开源项目\\低代码\\Tooy-LowCode\\lowCode\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1693619864566},{"path":"D:\\开源项目\\低代码\\Tooy-LowCode\\lowCode\\node_modules\\px2rem-loader\\index.js","mtime":1693619901908},{"path":"D:\\开源项目\\低代码\\Tooy-LowCode\\lowCode\\node_modules\\postcss-loader\\src\\index.js","mtime":1693619864324},{"path":"D:\\开源项目\\低代码\\Tooy-LowCode\\lowCode\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1693619903311},{"path":"D:\\开源项目\\低代码\\Tooy-LowCode\\lowCode\\node_modules\\sass-resources-loader\\lib\\loader.js","mtime":1693619810749},{"path":"D:\\开源项目\\低代码\\Tooy-LowCode\\lowCode\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1693619820390},{"path":"D:\\开源项目\\低代码\\Tooy-LowCode\\lowCode\\node_modules\\vue-loader\\lib\\index.js","mtime":1693619864566}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi53cmFwIHsNCiAgcG9zaXRpb246IHJlbGF0aXZlOw0KICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7DQogIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTVlNWU1Ow0KICBib3JkZXItbGVmdDogMXB4IHNvbGlkICNlNWU1ZTU7DQoNCiAgLndyYXAtaXRlbSB7DQogICAgd2lkdGg6IDUwcHg7IC8qIG5vICovDQogICAgaGVpZ2h0OiA1MHB4OyAvKiBubyAqLw0KICAgIGJhY2tncm91bmQ6ICNmOGY4Zjg7DQogICAgLy8gYm9yZGVyOiAxcHggc29saWQgI2U1ZTVlNTsNCiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2U1ZTVlNTsNCiAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjZTVlNWU1Ow0KDQogICAgY29sb3I6ICNiYmI7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KDQogICAgaSB7DQogICAgICBwb2ludGVyLWV2ZW50czogbm9uZTsNCiAgICB9DQogIH0NCg0KICAubW92ZS13cmFwIHsNCiAgICBiYWNrZ3JvdW5kOiAjZTBlZGZmOw0KDQogICAgaSB7DQogICAgICBkaXNwbGF5OiBub25lOw0KICAgIH0NCiAgfQ0KDQogIC5lZGl0LXdyYXAgew0KICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOw0KICAgIGJvcmRlcjogMXB4IHNvbGlkICNlYmVkZjA7DQogICAgZm9udC1zaXplOiAxMHB4Ow0KICAgIGNvbG9yOiAjN2Q3ZTgwOw0KICAgIHotaW5kZXg6IDI7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KDQogICAgLmVkaXQtd3JhcC1jbG9zZSB7DQogICAgICBkaXNwbGF5OiBub25lOw0KICAgICAgcG9zaXRpb246IGFic29sdXRlOw0KICAgICAgdG9wOiAtOHB4Ow0KICAgICAgcmlnaHQ6IC04cHg7DQogICAgICB3aWR0aDogMTZweDsNCiAgICAgIGhlaWdodDogMTZweDsNCiAgICAgIGxpbmUtaGVpZ2h0OiAxNnB4Ow0KICAgICAgYm9yZGVyLXJhZGl1czogNTAlOw0KICAgICAgYmFja2dyb3VuZDogI2IzYjNiMzsNCiAgICAgIGNvbG9yOiAjZmZmOw0KICAgICAgZm9udC1zaXplOiAxNHB4Ow0KICAgICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgICAgei1pbmRleDogNDsNCiAgICB9DQogIH0NCg0KICAuZWRpdC13cmFwLWFjdGl2ZSB7DQogICAgYmFja2dyb3VuZDogI2UwZWRmZjsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAjMTU1YmQ0Ow0KICAgIGNvbG9yOiAjMTU1YmQ0Ow0KICAgIHotaW5kZXg6IDU7DQoNCiAgICAmOmhvdmVyIHsNCiAgICAgIC5lZGl0LXdyYXAtY2xvc2Ugew0KICAgICAgICBkaXNwbGF5OiBibG9jazsNCiAgICAgIH0NCiAgICB9DQogIH0NCn0NCg=="},{"version":3,"sources":["CapCubeLayout.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuRA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CapCubeLayout.vue","sourceRoot":"src/custom-schema-template/components/SchemaCapCube","sourcesContent":["<!--\r\n * @Description: 自定义点选布局\r\n * @Autor: WangYuan\r\n * @Date: 2021-06-02 14:18:38\r\n * @LastEditors: WangYuan\r\n * @LastEditTime: 2022-01-27 19:43:28\r\n-->\r\n<template>\r\n  <div class=\"wrap\">\r\n\r\n    <!-- 布局容器 -->\r\n    <ul\r\n      v-for=\"y in ys\"\r\n      :key=\"y\"\r\n      class=\"flex\"\r\n    >\r\n      <li\r\n        v-for=\"x in xs\"\r\n        :key=\"mergeKey(y,x)\"\r\n        :data-key='mergeKey(y,x)'\r\n        :data-y='y'\r\n        :data-x='x'\r\n        class=\"wrap-item flex-center\"\r\n        :class=\"[editKeys.includes(mergeKey(y,x)) ? 'move-wrap':'']\"\r\n        @click='clickWrap($event)'\r\n        @mouseover='move'\r\n      >\r\n        <i class=\"f12 icon icon-jia\"></i>\r\n      </li>\r\n    </ul>\r\n\r\n    <!-- 编辑容器块 -->\r\n    <div\r\n      v-for=\"(item,index) in mValue\"\r\n      :key=\"index\"\r\n      class=\"edit-wrap flex-column flex-center\"\r\n      :class=\"[cuurIndex == index ? 'edit-wrap-active' : '']\"\r\n      :style=\"getStyle(item)\"\r\n      @click=\"clickItem(index)\"\r\n    >\r\n      <div\r\n        v-show=\"model=='custom'\"\r\n        class=\"edit-wrap-close\"\r\n        @click.stop=\"deleteEditWrap(index)\"\r\n      >\r\n        <i class=\"f12 icon icon-cha-\"></i>\r\n      </div>\r\n      <div class=\"mb3\">{{`${parseInt(item.width*62.5)}x${parseInt(item.height*62.5)}`}}</div>\r\n      <div v-show=\"item.width > 1\">或同等比例</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"custom-layout\",\r\n  props: {\r\n    value: {\r\n      type: Array,\r\n      default: () => [],\r\n    },\r\n    model: {\r\n      type: String,\r\n      default: \"custom\",\r\n    },\r\n    row: {\r\n      type: Number,\r\n      default: 10,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      startKey: 0,\r\n      cuurIndex: -1,\r\n      col: 6,\r\n      edit: false, // 编辑模式\r\n      ys: [],\r\n      mValue: [],\r\n      editKeys: [], // 编辑key集合\r\n    };\r\n  },\r\n  computed: {\r\n    xs() {\r\n      return [...Array(this.col).keys()];\r\n    },\r\n  },\r\n  watch: {\r\n    value: {\r\n      immediate: true,\r\n      deep: true,\r\n      handler(newValue, oldValue) {\r\n        this.mValue = newValue;\r\n      },\r\n    },\r\n    mValue: {\r\n      immediate: true,\r\n      deep: true,\r\n      handler(newValue, oldValue) {\r\n        this.$emit(\"input\", newValue);\r\n      },\r\n    },\r\n    row: {\r\n      immediate: true,\r\n      handler(newValue, oldValue) {\r\n        this.ys = [...Array(this.row).keys()];\r\n      },\r\n    },\r\n    cuurIndex: {\r\n      handler(newValue, oldValue) {\r\n        console.log('...');\r\n        \r\n        console.log(newValue);\r\n        \r\n        let temp = newValue == -1 ? undefined : this.mValue[newValue];\r\n        this.$emit(\"onCuurIndex\", temp);\r\n      },\r\n    },\r\n  },\r\n  methods: {\r\n    // 重置容器\r\n    reset() {\r\n      this.startKey = 0;\r\n      this.cuurIndex = -1;\r\n      this.edit = false;\r\n      this.mValue = [];\r\n      this.editKeys = [];\r\n    },\r\n\r\n    // 点击单元块\r\n    clickWrap(e) {\r\n      // 开始编辑模式\r\n      if (!this.edit) {\r\n        let key = e.target.dataset.key;\r\n        this.editKeys.push(Number(key));\r\n        this.startKey = key;\r\n        this.edit = true;\r\n      } else {\r\n        let keys = this.$cloneDeep(this._.sortBy(this.editKeys));\r\n        let start = this.splitKey(keys[0]);\r\n        let end = this.splitKey(keys.pop());\r\n\r\n        // 结束编辑模式\r\n        let temp = {\r\n          top: start.y,\r\n          left: start.x,\r\n          bottom: end.y + 1,\r\n          right: end.x + 1,\r\n          height: end.y - start.y + 1,\r\n          width: end.x - start.x + 1,\r\n          image: \"//d303.paixin.com/thumbs/1561359/378467338/staff_1024.jpg\",\r\n        };\r\n\r\n        this.mValue.push(temp);\r\n        this.cuurIndex = this.mValue.length - 1;\r\n\r\n        this.editKeys = [];\r\n        this.edit = false;\r\n      }\r\n    },\r\n\r\n    // 移动鼠标设置编辑容器\r\n    move(e) {\r\n      if (!this.edit) return;\r\n\r\n      let keys = [];\r\n      let start = this.splitKey(this.startKey);\r\n      let end = this.splitKey(e.target.dataset.key);\r\n      let ys = this._.sortBy([start.y, end.y]);\r\n      let xs = this._.sortBy([start.x, end.x]);\r\n\r\n      // 容器碰撞，阻止编辑容器变更\r\n      if (this.antiCollision(start, end)) {\r\n        return;\r\n      }\r\n\r\n      for (let i = ys[0]; i <= ys[1]; i++) {\r\n        for (let j = xs[0]; j <= xs[1]; j++) {\r\n          keys.push(this.mergeKey(i, j));\r\n        }\r\n      }\r\n\r\n      this.editKeys = keys;\r\n    },\r\n\r\n    // 防碰撞算法\r\n    antiCollision(start, end) {\r\n      let result = false;\r\n\r\n      this.$cloneDeep(this.mValue).map((item) => {\r\n        --item.bottom;\r\n        --item.right;\r\n\r\n        // 判断 x 是否有交集\r\n        if (\r\n          this.$isIntersection(this._.sortBy([start.x, end.x]), [\r\n            item.left,\r\n            item.right,\r\n          ])\r\n        ) {\r\n          // 初始点在目标块y轴上方,结束点大于等于目标块top，发生了碰撞\r\n          if (start.y < item.top && end.y >= item.top) {\r\n            console.log(\"初始点在目标块y轴上方,碰撞了\");\r\n            result = true;\r\n          }\r\n          // 初始点在目标块y轴下方,结束点小于等于目标块bottom，发生了碰撞\r\n          if (start.y > item.bottom && end.y <= item.bottom) {\r\n            console.log(\"初始点在目标块y轴下方,碰撞了\");\r\n            result = true;\r\n          }\r\n        }\r\n\r\n        // 判断 y 是否有交集\r\n        if (\r\n          this.$isIntersection(this._.sortBy([start.y, end.y]), [\r\n            item.top,\r\n            item.bottom,\r\n          ])\r\n        ) {\r\n          // 初始点在目标块y轴左方,结束点大于等于目标块left，发生了碰撞\r\n          if (start.x < item.left && end.x >= item.left) {\r\n            console.log(\"初始点在目标块y轴左方,碰撞了\");\r\n            result = true;\r\n          }\r\n          // 初始点在目标块y轴下方,结束点小于等于目标块bottom，发生了碰撞\r\n          if (start.x > item.right && end.x <= item.right) {\r\n            console.log(\"初始点在目标块y轴右方,碰撞了\");\r\n            result = true;\r\n          }\r\n        }\r\n      });\r\n\r\n      return result;\r\n    },\r\n\r\n    // 坐标计算下标\r\n    mergeKey(y, x) {\r\n      return Number(x + y * 10);\r\n    },\r\n\r\n    // 下标拆分坐标\r\n    splitKey(key) {\r\n      if (key >= 10) {\r\n        return { y: parseInt((key % 100) / 10), x: key % 10 };\r\n      } else {\r\n        return { y: 0, x: Number(key) };\r\n      }\r\n    },\r\n\r\n    // 样式处理\r\n    getStyle(style) {\r\n      let result = {};\r\n      Object.keys(style).map((key) => {\r\n        result[key] = style[key] * 50;\r\n\r\n        if ([\"top\", \"left\"].includes(key)) {\r\n          --result[key];\r\n        }\r\n        if ([\"width\", \"height\"].includes(key)) {\r\n          ++result[key];\r\n        }\r\n        result[key] += \"px\";\r\n      });\r\n\r\n      return result;\r\n    },\r\n\r\n    deleteEditWrap(index) {\r\n      this.mValue.splice(index, 1);\r\n      this.cuurIndex = this.mValue.length - 1;\r\n    },\r\n\r\n    clickItem(index) {\r\n      this.cuurIndex = index;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.wrap {\r\n  position: relative;\r\n  display: inline-block;\r\n  border-top: 1px solid #e5e5e5;\r\n  border-left: 1px solid #e5e5e5;\r\n\r\n  .wrap-item {\r\n    width: 50px; /* no */\r\n    height: 50px; /* no */\r\n    background: #f8f8f8;\r\n    // border: 1px solid #e5e5e5;\r\n    border-bottom: 1px solid #e5e5e5;\r\n    border-right: 1px solid #e5e5e5;\r\n\r\n    color: #bbb;\r\n    cursor: pointer;\r\n\r\n    i {\r\n      pointer-events: none;\r\n    }\r\n  }\r\n\r\n  .move-wrap {\r\n    background: #e0edff;\r\n\r\n    i {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  .edit-wrap {\r\n    position: absolute;\r\n    background-color: #fff;\r\n    border: 1px solid #ebedf0;\r\n    font-size: 10px;\r\n    color: #7d7e80;\r\n    z-index: 2;\r\n    cursor: pointer;\r\n\r\n    .edit-wrap-close {\r\n      display: none;\r\n      position: absolute;\r\n      top: -8px;\r\n      right: -8px;\r\n      width: 16px;\r\n      height: 16px;\r\n      line-height: 16px;\r\n      border-radius: 50%;\r\n      background: #b3b3b3;\r\n      color: #fff;\r\n      font-size: 14px;\r\n      text-align: center;\r\n      z-index: 4;\r\n    }\r\n  }\r\n\r\n  .edit-wrap-active {\r\n    background: #e0edff;\r\n    border: 1px solid #155bd4;\r\n    color: #155bd4;\r\n    z-index: 5;\r\n\r\n    &:hover {\r\n      .edit-wrap-close {\r\n        display: block;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>"]}]}